swagger: "2.0"
info:
  version: "v1"
  title: Route Table
  description: "Route Table APIs"

basePath: /regions/{regionId}

schemes:
  - https

paths:
  "/routeTables/":
     get:
       summary: "Query Route Table Information"
       description: "Query Route Table Information"
       operationId: describeRouteTables
       parameters:
         - name: pageNumber
           in: query
           type: integer
           default: 1
           minimum: 1
           description: "Page; it is 1 by default. Value Range: [1,âˆž); when the pages exceed total pages, show the last page"
         - name: pageSize
           in: query
           type: integer
           default: 20
           minimum: 10
           maximum: 100
           description: "Paging size; it is 20 by default. Value Range: [10, 100]"
         - name: filters
           in: query
           type: array
           items:
             $ref: "../../common/model/Filter.yaml#/definitions/filter"
           description: "|"
                  routeTableIds - Route table ID list, support multiple IDs
                  routeTableNames - Route table name list, support multiple names
                  VPCId	- VPC ID of route table, support single Id

       responses:
         200:
           description: "OK"
           schema:
             properties:
               result:
                 description: "Returned Results"
                 properties:
                   routeTables:
                     description: "Route Table Resource Information List"
                     type: array
                     items:
                       $ref: "../model/RouteTable.yaml#/definitions/routeTable"
                   totalCount:
                     description: "Total Number"
                     type: number
               requestId:
                 description: "Request ID"
                 type: string
         400:
            description: "invalid parameter"
         401:
            description: "Authentication failed"

     #create routeTable
     post:
       summary: "Create Route Table"
       description: "Create Route Table"
       operationId: createRouteTable
       parameters:
         - name: routeTableSpec
           in: body
           required: true
           description: "Create Route Table Request Parameter"
           x-jdcloud-tiered: false
           schema:
             $ref: "../model/RouteTableSpec.yaml#/definitions/routeTableSpec"

       responses:
         200:
           description: "OK"
           schema:
             properties:
               result:
                 description: "Returned Results"
                 properties:
                   routeTableId:
                     description: "Route Table ID"
                     type: string
               requestId:
                 description: "Request ID"
                 type: string
         400:
            description: "invalid parameter"
         404:
            description: "Resource not found"
         500:
            description: "Internal server error"


  "/routeTables/{routeTableId}":
     #describe routeTable
     get:
       summary: Query Route Table Information Details
       description: "Query Route Table Information Details"
       operationId: describeRouteTable
       responses:
         200:
           description: "OK"
           schema:
             properties:
               result:
                 description: "Returned Results"
                 properties:
                   routeTable:
                      description: "Route Table Resource Information"
                      $ref: "../model/RouteTable.yaml#/definitions/routeTable"
               requestId:
                 description: "Request ID"
                 type: string
         400:
            description: "invalid parameter"
         401:
            description: "Authentication failed"

     #modify routeTable
     patch:
       summary: Modify Route Table Attribute
       description: "Modify Route Table Attribute"
       operationId: modifyRouteTable
       parameters:
         - name: modifyRouteTableSpec
           in: body
           required: true
           description: "Modify Route Table"
           x-jdcloud-tiered: false
           schema:
             $ref: "../model/ModifyRouteTableSpec.yaml#/definitions/modifyRouteTableSpec"
       responses:
         200:
           description: "OK"
           schema:
             properties:
               requestId:
                 description: "Request ID"
                 type: string
         400:
           description: "Request parameter x.y.z is 'xxx', expected one of [yyy,zzz]"
         404:
           description: "Resource not found"

     #delete routeTable
     delete:
         summary: Delete Route Table
         description: "Delete Route Table"
         operationId: deleteRouteTable
         responses:
           200:
             description: "OK"
             schema:
               properties:
                 requestId:
                   description: "Request ID"
                   type: string
           400:
             description: "invalid parameter"
           404:
             description: "Resource not found"
           500:
             description: "Internal server error"

  #add routeTable rules
  "/routeTables/{routeTableId}:addRouteTableRules":
    post:
      summary: "Add Route Table Rule"
      description: "Add Route Table Rule"
      operationId: addRouteTableRules
      parameters:
        - name: addRouteTableRulesSpec
          in: body
          required: true
          x-jdcloud-tiered: false
          schema:
            $ref: "../model/AddRouteTableRulesSpec.yaml#/definitions/addRouteTableRulesSpec"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: object
            properties:
              requestId:
                 description: "Request ID"
                 type: string
        400:
           description: "Request parameter x.y.z is 'xxx', expected one of [yyy,zzz]"
        404:
           description: "Resource not found"
        409:
           description: "RouteTable rules not in the same vpc"
        500:
           description: "Internal server error"

  #remove routeTable rules
  "/routeTables/{routeTableId}:removeRouteTableRules":
    post:
      summary: "Remove Route Table Rule"
      description: "Remove Route Table Rule"
      operationId: removeRouteTableRules
      parameters:
        - in: body
          name: ruleIds
          description: "Route Table Rule ID List"
          required: true
          schema:
            type: array
            items:
              type: string

      responses:
        200:
          description: "Successful operation"
          schema:
            type: object
            properties:
              requestId:
                 description: "Request ID"
                 type: string
        400:
           description: "Request field x.y.z is missing."
        404:
           description: "Target 'xxx' not found; TargetGroup 'xxx' not found."
        500:
           description: "internal server error"
  
  #modify routeTable rules         
  "/routeTables/{routeTableId}:modifyRouteTableRules":
    post:
      summary: "Modify Route Table Rule"
      description: "Modify Route Table Rule"
      operationId: modifyRouteTableRules
      parameters:
        - name: modifyRouteTableRulesSpec
          in: body
          required: true
          x-jdcloud-tiered: false
          schema:
            $ref: "../model/ModifyRouteTableRulesSpec.yaml#/definitions/modifyRouteTableRulesSpec"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: object
            properties:
              requestId:
                 description: "Request ID"
                 type: string
        400:
           description: "invalid parameter"
        404:
           description: "RouteTable or RouteTableRule not found"
        500:
           description: "Internal server error"
           
  "/routeTables/{routeTableId}:associateRouteTable":
     post:
       description: "Associate Subnet Interface to Route Table"
       operationId: associateRouteTable
       parameters:
         - name: associateRouteTableSpec
           in: body
           required: true
           x-jdcloud-tiered: false
           schema:
             $ref: "../model/AssociateRouteTableSpec.yaml#/definitions/associateRouteTableSpec"
       responses:
         200:
           description: "Successful operation"
           schema:
             type: object
             properties:
               requestId:
                 description: "Request ID"
                 type: string
         400:
           description: "Request parameter x.y.z is 'xxx', expected one of [yyy,zzz]"
         404:
           description: "Resource not found"

  "/routeTables/{routeTableId}:disassociateRouteTable":
     post:
       description: "Disassociate Subnet Interface from Route Table"
       operationId: disassociateRouteTable
       parameters:
         - name: disassociateRouteTableSpec
           in: body
           required: true
           x-jdcloud-tiered: false
           schema:
             $ref: "../model/DisassociateRouteTableSpec.yaml#/definitions/disassociateRouteTableSpec"
       responses:
         200:
           description: "Successful operation"
           schema:
             type: object
             properties:
               requestId:
                 description: "Request ID"
                 type: string
         400:
           description: "Request parameter x.y.z is 'xxx', expected one of [yyy,zzz]"
         404:
           description: "Resource not found"

parameters:
  regionId:
    name: regionId
    in: path
    required: true
    type: string
    description: "Region ID"
  routeTableId:
    name: routeTableId
    in: path
    required: true
    type: string
    description: "RouteTable ID"
