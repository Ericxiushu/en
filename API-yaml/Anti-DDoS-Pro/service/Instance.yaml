swagger: "2.0"
info:
  version: "v1"
  title: Advanced Anti-DDoS Instance APIs
  description: Advanced Anti-DDoS Instance APIs, instance level interface in forwarding configuration, etc.

basePath: /regions/{regionId}

paths:
  /instances:
    post:
      description: "Create an instance"
      operationId: createInstance
      parameters:
        - name: instanceSpec
          in: body
          description: Instance type parameter
          required: true
          schema:
            $ref: "../model/InstanceSpec.yaml#/definitions/instanceSpec"
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                properties:
                  orderId:
                    type: string
              requestId:
                type: string
    get:
      description: "Search the instance list"
      operationId: describeInstances
      parameters:
        - name: pageNumber
          in: query
          type: integer
          required: false
          description: "Page number; 1 by default"
        - name: pageSize
          in: query
          type: integer
          required: false
          description: "Paging size; it is 20 by default; value range [10, 100]"
        - name: name
          in: query
          type: string
          required: false
          description: "Instance name, fuzzy matching available"
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                properties:
                  dataList:
                    type: array
                    items:
                      $ref: "../model/Instance.yaml#/definitions/instance"
                  totalCount:
                    type: integer
              requestId:
                type: string
  /instances/{instanceId}:
    get:
      description: "Search instances"
      operationId: describeInstance
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                properties:
                  data:
                    $ref: "../model/Instance.yaml#/definitions/instance"
              requestId:
                type: string
        404:
          description: NOT_FOUND

  /instances/{instanceId}:setCC:
    post:
      description: "Set the instance CC defense"
      operationId: modifyInstanceCC
      parameters:
        - name: CCSpec
          in: body
          description: cc parameter
          required: true
          schema:
            $ref: "../model/CcSpec.yaml#/definitions/CCSpec"
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string
        404:
          description: NOT_FOUND

  /instances/{instanceId}:enableCC:
    post:
      description: "Enable the instance CC defense"
      operationId: enableInstanceCC
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string
        404:
          description: NOT_FOUND

  /instances/{instanceId}:disableCC:
    post:
      description: "Disable the instance CC defense"
      operationId: disableInstanceCC
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string
        404:
          description: NOT_FOUND

  /instances/{instanceId}:setUrlWhiteList:
    post:
      description: "Set the instance url white list"
      operationId: modifyInstanceUrlWhiteList
      parameters:
        - name: urlWhiteList
          in: body
          description: Web service rule parameter
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string
        404:
          description: NOT_FOUND

  /instances/{instanceId}:enableUrlWhiteList:
    post:
      description: "Enable the instance url white list"
      operationId: enableInstanceUrlWhiteList
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string
        404:
          description: NOT_FOUND

  /instances/{instanceId}:disableUrlWhiteList:
    post:
      description: "Disable the instance url white list"
      operationId: disableInstanceUrlWhiteList
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string
        404:
          description: NOT_FOUND

  /instances/{instanceId}:rename:
    post:
      description: "Modify the instance name"
      operationId: modifyInstanceName
      parameters:
        - name: name
          in: query
          description: New instance name
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string
        404:
          description: NOT_FOUND

  /instances/{instanceId}:setIpBlackList:
    post:
      description: "Set the instance IP blacklist"
      operationId: modifyInstanceIpBlackList
      parameters:
        - name: IpBlackList
          in: body
          description: IP blacklist
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string
        404:
          description: NOT_FOUND
  /instances/{instanceId}:enableIpBlackList:
    post:
      description: "Enable the instance IP blacklist"
      operationId: enableInstanceIpBlackList
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string
        404:
          description: NOT_FOUND
  /instances/{instanceId}:disableIpBlackList:
    post:
      description: "Disable the instance IP blacklist"
      operationId: disableInstanceIpBlackList
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string
        404:
          description: NOT_FOUND
  /instances/{instanceId}:setIpWhiteList:
    post:
      description: "Set the instance IP white list"
      operationId: modifyInstanceIpWhiteList
      parameters:
        - name: IpWhiteList
          in: body
          description: IP white list
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string
        404:
          description: NOT_FOUND
  /instances/{instanceId}:enableIpWhiteList:
    post:
      description: "Enable the instance IP white list"
      operationId: enableInstanceIpWhiteList
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string
        404:
          description: NOT_FOUND
  /instances/{instanceId}:disableIpWhiteList:
    post:
      description: "Disable the instance IP white list"
      operationId: disableInstanceIpWhiteList
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string
        404:
          description: NOT_FOUND

  /instances/{instanceId}:enableCcObserverMode:
    post:
      description: "Enable the observer mode of instance CC defense"
      operationId: enableCcObserverMode
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string
        404:
          description: NOT_FOUND

  /instances/{instanceId}:disableCcObserverMode:
    post:
      description: "Disable the observer mode of instance CC defense"
      operationId: disableCcObserverMode
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string
        404:
          description: NOT_FOUND

  /instances/{instanceId}:enableCcIpLimit:
    post:
      description: "Enable the speed limit of each IP of CC defense"
      operationId: enableCcIpLimit
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string
        404:
          description: NOT_FOUND

  /instances/{instanceId}:disableCcIpLimit:
    post:
      description: "Disable the speed limit of each IP of CC defense"
      operationId: disableCcIpLimit
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string
        404:
          description: NOT_FOUND

  /instances/{instanceId}:setCcIpLimit:
    post:
      description: "Set the speed limit of each Ip of instance CC defense"
      operationId: setCcIpLimit
      parameters:
        - name: CCSpec
          in: body
          description: cc parameter
          required: true
          schema:
            $ref: "../model/CcIpLimitSpec.yaml#/definitions/CcIpLimitSpec"
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string
        404:
          description: NOT_FOUND
# General parameters of path
parameters:
  regionId:
    name: regionId
    in: path
    required: true
    type: string
    description: Belonging region ID
  instanceId:
    name: instanceId
    in: path
    required: true
    type: string
    description: Instance ID
